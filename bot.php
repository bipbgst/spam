<?php
/*
----------------------------------------------
Author    : Aslanz
Github    : https://github.com/aslanz17
Instagram : https://instagram.com/aslanz17
Youtube   : https://youtube.com/ASLANZ
----------------------------------------------
*/
eval(base64_decode(''))
?>